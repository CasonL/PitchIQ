"""Add business onboarding models with encryption

Revision ID: 6971ee351279
Revises: 7d462f230617
Create Date: 2025-06-20 19:05:09.270676

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6971ee351279'
down_revision = '7d462f230617'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('business_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('company_name', sa.String(length=200), nullable=True),
    sa.Column('industry', sa.String(length=100), nullable=True),
    sa.Column('company_size', sa.String(length=50), nullable=True),
    sa.Column('business_type', sa.String(length=50), nullable=True),
    sa.Column('_business_description_encrypted', sa.LargeBinary(), nullable=True),
    sa.Column('_target_customers_encrypted', sa.LargeBinary(), nullable=True),
    sa.Column('_sales_process_encrypted', sa.LargeBinary(), nullable=True),
    sa.Column('_compliance_requirements_encrypted', sa.LargeBinary(), nullable=True),
    sa.Column('_competitive_landscape_encrypted', sa.LargeBinary(), nullable=True),
    sa.Column('_pricing_strategy_encrypted', sa.LargeBinary(), nullable=True),
    sa.Column('_sales_scripts_encrypted', sa.LargeBinary(), nullable=True),
    sa.Column('_objection_handling_encrypted', sa.LargeBinary(), nullable=True),
    sa.Column('ai_business_summary', sa.Text(), nullable=True),
    sa.Column('ai_sales_recommendations', sa.Text(), nullable=True),
    sa.Column('ai_training_focus_areas', sa.Text(), nullable=True),
    sa.Column('business_onboarding_complete', sa.Boolean(), nullable=True),
    sa.Column('document_analysis_complete', sa.Boolean(), nullable=True),
    sa.Column('encryption_key_id', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_business_profiles_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_business_profiles')),
    sa.UniqueConstraint('user_id', name=op.f('uq_business_profiles_user_id'))
    )
    op.create_table('business_documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('business_profile_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('original_filename', sa.String(length=255), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('content_type', sa.String(length=100), nullable=False),
    sa.Column('document_type', sa.String(length=50), nullable=True),
    sa.Column('_content_encrypted', sa.LargeBinary(), nullable=False),
    sa.Column('ai_extracted_text', sa.Text(), nullable=True),
    sa.Column('ai_document_summary', sa.Text(), nullable=True),
    sa.Column('ai_key_insights', sa.Text(), nullable=True),
    sa.Column('analysis_complete', sa.Boolean(), nullable=True),
    sa.Column('processing_status', sa.String(length=20), nullable=True),
    sa.Column('processing_error', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['business_profile_id'], ['business_profiles.id'], name=op.f('fk_business_documents_business_profile_id_business_profiles')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_business_documents'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('business_documents')
    op.drop_table('business_profiles')
    # ### end Alembic commands ###
